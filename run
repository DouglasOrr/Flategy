#!/usr/bin/env python3

import argparse
import subprocess
import time

IMAGE = 'flategy'
NOTEBOOK = 'flategy-notebook'


def sh(cmd, **args):
    code = subprocess.call(cmd.format(**args), shell=True)
    if code:
        exit(code)


def build():
    sh('docker build --rm -t ${IMAGE} .',
       IMAGE=IMAGE)


def run(command):
    sh('docker run --rm -it -v `pwd`:/work -w /work'
       ' {image} {command}',
       image=IMAGE,
       command=' '.join(command))


def test():
    run(['pytest flategy'])
    run(['flake8'])


def notebook():
    sh('docker rm -f {name} || true',
       name=NOTEBOOK)
    sh('docker run -d --name {name} -v `pwd`:/work -w /work'
       ' -p 8888:8888 -e PYTHONPATH=/work'
       ' {image}'
       ' jupyter notebook'
       ' --port 8888 --no-browser --allow-root --ip="*"',
       name=NOTEBOOK,
       image=IMAGE)
    time.sleep(1)
    sh('docker logs {name}', name=NOTEBOOK)


parser = argparse.ArgumentParser(
    description='Runner script for Flategy'
)
parser.set_defaults(action=lambda: parser.print_help())
subs = parser.add_subparsers()

subs.add_parser('build').set_defaults(action=build)

p = subs.add_parser('run')
p.add_argument('command', nargs='*', default=[])
p.set_defaults(action=run)

subs.add_parser('test').set_defaults(action=test)

subs.add_parser('notebook').set_defaults(action=notebook)

args = vars(parser.parse_args())
action = args.pop('action')
action(**args)
